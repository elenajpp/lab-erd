-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`ACCOUNT`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ACCOUNT` (
  `idACCOUNT` INT NOT NULL,
  `currency` VARCHAR(45) NULL,
  `bank account` VARCHAR(45) NULL,
  PRIMARY KEY (`idACCOUNT`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PLAYLIST`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`PLAYLIST` (
  `idPLAYLIST` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Author` VARCHAR(45) NULL,
  `Gender` VARCHAR(45) NULL,
  `Date of Birth` VARCHAR(45) NULL,
  `ACCOUNT_idACCOUNT` INT NOT NULL,
  PRIMARY KEY (`idPLAYLIST`, `ACCOUNT_idACCOUNT`),
  INDEX `fk_PLAYLIST_ACCOUNT1_idx` (`ACCOUNT_idACCOUNT` ASC) VISIBLE,
  CONSTRAINT `fk_PLAYLIST_ACCOUNT1`
    FOREIGN KEY (`ACCOUNT_idACCOUNT`)
    REFERENCES `mydb`.`ACCOUNT` (`idACCOUNT`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`SONG`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SONG` (
  `idSONG` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Artist` VARCHAR(45) NULL,
  `duracion` VARCHAR(45) NULL,
  `Gender` VARCHAR(45) NULL,
  `PLAYLIST_idPLAYLIST` INT NOT NULL,
  `PLAYLIST_idPLAYLIST1` INT NOT NULL,
  `PLAYLIST_ACCOUNT_idACCOUNT` INT NOT NULL,
  `PLAYLIST_idPLAYLIST2` INT NOT NULL,
  `PLAYLIST_ACCOUNT_idACCOUNT1` INT NOT NULL,
  PRIMARY KEY (`idSONG`, `PLAYLIST_idPLAYLIST`, `PLAYLIST_idPLAYLIST1`, `PLAYLIST_ACCOUNT_idACCOUNT`, `PLAYLIST_idPLAYLIST2`, `PLAYLIST_ACCOUNT_idACCOUNT1`),
  INDEX `fk_SONG_PLAYLIST1_idx` (`PLAYLIST_idPLAYLIST2` ASC, `PLAYLIST_ACCOUNT_idACCOUNT1` ASC) VISIBLE,
  CONSTRAINT `fk_SONG_PLAYLIST1`
    FOREIGN KEY (`PLAYLIST_idPLAYLIST2` , `PLAYLIST_ACCOUNT_idACCOUNT1`)
    REFERENCES `mydb`.`PLAYLIST` (`idPLAYLIST` , `ACCOUNT_idACCOUNT`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`USER` (
  `idUSER` INT NOT NULL,
  `Name` VARCHAR(45) NULL,
  `Date of birth` DATE NULL,
  `Gender` VARCHAR(45) NULL,
  `tariff` VARCHAR(45) NULL,
  `PLAYLIST_idPLAYLIST` INT NOT NULL,
  `ACCOUNT_idACCOUNT` INT NOT NULL,
  PRIMARY KEY (`idUSER`, `PLAYLIST_idPLAYLIST`, `ACCOUNT_idACCOUNT`),
  INDEX `fk_USER_PLAYLIST1_idx` (`PLAYLIST_idPLAYLIST` ASC) VISIBLE,
  INDEX `fk_USER_ACCOUNT1_idx` (`ACCOUNT_idACCOUNT` ASC) VISIBLE,
  CONSTRAINT `fk_USER_PLAYLIST1`
    FOREIGN KEY (`PLAYLIST_idPLAYLIST`)
    REFERENCES `mydb`.`PLAYLIST` (`idPLAYLIST`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USER_ACCOUNT1`
    FOREIGN KEY (`ACCOUNT_idACCOUNT`)
    REFERENCES `mydb`.`ACCOUNT` (`idACCOUNT`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`FAVOURITES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`FAVOURITES` (
  `idFAVOURITES` INT NOT NULL,
  `Song` VARCHAR(45) NULL,
  `Playlist` VARCHAR(45) NULL,
  `Album` VARCHAR(45) NULL,
  `User` VARCHAR(45) NULL,
  `USER_idUSER` INT NOT NULL,
  `USER_PLAYLIST_idPLAYLIST` INT NOT NULL,
  PRIMARY KEY (`idFAVOURITES`, `USER_idUSER`, `USER_PLAYLIST_idPLAYLIST`),
  INDEX `fk_FAVOURITES_USER1_idx` (`USER_idUSER` ASC, `USER_PLAYLIST_idPLAYLIST` ASC) VISIBLE,
  CONSTRAINT `fk_FAVOURITES_USER1`
    FOREIGN KEY (`USER_idUSER` , `USER_PLAYLIST_idPLAYLIST`)
    REFERENCES `mydb`.`USER` (`idUSER` , `PLAYLIST_idPLAYLIST`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`SONG_has_PLAYLIST`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SONG_has_PLAYLIST` (
  `id` INT NOT NULL,
  `SONG_idSONG` INT NOT NULL,
  `SONG_PLAYLIST_idPLAYLIST` INT NOT NULL,
  `PLAYLIST_idPLAYLIST` INT NOT NULL,
  `PLAYLIST_ACCOUNT_idACCOUNT` INT NOT NULL,
  PRIMARY KEY (`id`, `SONG_idSONG`, `SONG_PLAYLIST_idPLAYLIST`, `PLAYLIST_idPLAYLIST`, `PLAYLIST_ACCOUNT_idACCOUNT`),
  INDEX `fk_SONG_has_PLAYLIST_SONG1_idx` (`SONG_idSONG` ASC, `SONG_PLAYLIST_idPLAYLIST` ASC) VISIBLE,
  INDEX `fk_SONG_has_PLAYLIST_PLAYLIST1_idx` (`PLAYLIST_idPLAYLIST` ASC, `PLAYLIST_ACCOUNT_idACCOUNT` ASC) VISIBLE,
  CONSTRAINT `fk_SONG_has_PLAYLIST_SONG1`
    FOREIGN KEY (`SONG_idSONG` , `SONG_PLAYLIST_idPLAYLIST`)
    REFERENCES `mydb`.`SONG` (`idSONG` , `PLAYLIST_idPLAYLIST`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SONG_has_PLAYLIST_PLAYLIST1`
    FOREIGN KEY (`PLAYLIST_idPLAYLIST` , `PLAYLIST_ACCOUNT_idACCOUNT`)
    REFERENCES `mydb`.`PLAYLIST` (`idPLAYLIST` , `ACCOUNT_idACCOUNT`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`SONG_has_FAVOURITES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SONG_has_FAVOURITES` (
  `id` INT NOT NULL,
  `SONG_idSONG` INT NOT NULL,
  `SONG_PLAYLIST_idPLAYLIST` INT NOT NULL,
  `FAVOURITES_idFAVOURITES` INT NOT NULL,
  `FAVOURITES_USER_idUSER` INT NOT NULL,
  `FAVOURITES_USER_PLAYLIST_idPLAYLIST` INT NOT NULL,
  PRIMARY KEY (`id`, `SONG_idSONG`, `SONG_PLAYLIST_idPLAYLIST`, `FAVOURITES_idFAVOURITES`, `FAVOURITES_USER_idUSER`, `FAVOURITES_USER_PLAYLIST_idPLAYLIST`),
  INDEX `fk_SONG_has_FAVOURITES_SONG1_idx` (`SONG_idSONG` ASC, `SONG_PLAYLIST_idPLAYLIST` ASC) VISIBLE,
  INDEX `fk_SONG_has_FAVOURITES_FAVOURITES1_idx` (`FAVOURITES_idFAVOURITES` ASC, `FAVOURITES_USER_idUSER` ASC, `FAVOURITES_USER_PLAYLIST_idPLAYLIST` ASC) VISIBLE,
  CONSTRAINT `fk_SONG_has_FAVOURITES_SONG1`
    FOREIGN KEY (`SONG_idSONG` , `SONG_PLAYLIST_idPLAYLIST`)
    REFERENCES `mydb`.`SONG` (`idSONG` , `PLAYLIST_idPLAYLIST`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SONG_has_FAVOURITES_FAVOURITES1`
    FOREIGN KEY (`FAVOURITES_idFAVOURITES` , `FAVOURITES_USER_idUSER` , `FAVOURITES_USER_PLAYLIST_idPLAYLIST`)
    REFERENCES `mydb`.`FAVOURITES` (`idFAVOURITES` , `USER_idUSER` , `USER_PLAYLIST_idPLAYLIST`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`SONG_has_USER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SONG_has_USER` (
  `ID` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`SONG_has_USER1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`SONG_has_USER1` (
  `SONG_idSONG` INT NOT NULL,
  `SONG_PLAYLIST_idPLAYLIST` INT NOT NULL,
  `SONG_PLAYLIST_idPLAYLIST1` INT NOT NULL,
  `SONG_PLAYLIST_ACCOUNT_idACCOUNT` INT NOT NULL,
  `SONG_PLAYLIST_idPLAYLIST2` INT NOT NULL,
  `SONG_PLAYLIST_ACCOUNT_idACCOUNT1` INT NOT NULL,
  `USER_idUSER` INT NOT NULL,
  `USER_PLAYLIST_idPLAYLIST` INT NOT NULL,
  `USER_ACCOUNT_idACCOUNT` INT NOT NULL,
  PRIMARY KEY (`SONG_idSONG`, `SONG_PLAYLIST_idPLAYLIST`, `SONG_PLAYLIST_idPLAYLIST1`, `SONG_PLAYLIST_ACCOUNT_idACCOUNT`, `SONG_PLAYLIST_idPLAYLIST2`, `SONG_PLAYLIST_ACCOUNT_idACCOUNT1`, `USER_idUSER`, `USER_PLAYLIST_idPLAYLIST`, `USER_ACCOUNT_idACCOUNT`),
  INDEX `fk_SONG_has_USER1_USER1_idx` (`USER_idUSER` ASC, `USER_PLAYLIST_idPLAYLIST` ASC, `USER_ACCOUNT_idACCOUNT` ASC) VISIBLE,
  INDEX `fk_SONG_has_USER1_SONG1_idx` (`SONG_idSONG` ASC, `SONG_PLAYLIST_idPLAYLIST` ASC, `SONG_PLAYLIST_idPLAYLIST1` ASC, `SONG_PLAYLIST_ACCOUNT_idACCOUNT` ASC, `SONG_PLAYLIST_idPLAYLIST2` ASC, `SONG_PLAYLIST_ACCOUNT_idACCOUNT1` ASC) VISIBLE,
  CONSTRAINT `fk_SONG_has_USER1_SONG1`
    FOREIGN KEY (`SONG_idSONG` , `SONG_PLAYLIST_idPLAYLIST` , `SONG_PLAYLIST_idPLAYLIST1` , `SONG_PLAYLIST_ACCOUNT_idACCOUNT` , `SONG_PLAYLIST_idPLAYLIST2` , `SONG_PLAYLIST_ACCOUNT_idACCOUNT1`)
    REFERENCES `mydb`.`SONG` (`idSONG` , `PLAYLIST_idPLAYLIST` , `PLAYLIST_idPLAYLIST1` , `PLAYLIST_ACCOUNT_idACCOUNT` , `PLAYLIST_idPLAYLIST2` , `PLAYLIST_ACCOUNT_idACCOUNT1`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SONG_has_USER1_USER1`
    FOREIGN KEY (`USER_idUSER` , `USER_PLAYLIST_idPLAYLIST` , `USER_ACCOUNT_idACCOUNT`)
    REFERENCES `mydb`.`USER` (`idUSER` , `PLAYLIST_idPLAYLIST` , `ACCOUNT_idACCOUNT`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
